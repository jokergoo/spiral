S3method("$", "TRACK_META")
export("$.TRACK_META")
S3method("names", "TRACK_META")
export("names.TRACK_META")
S3method("print", "TRACK_META")
export("print.TRACK_META")
export("TRACK_META")
export("cartesian_to_xy")
export("current_spiral")
export("current_spiral_vp")
export("current_track_index")
export("get_track_data")
export("horizon_legend")
export("is_in_track")
export("n_tracks")
export("phylo_to_dendrogram")
export("polar_to_cartesian")
export("set_current_track")
export("solve_theta_from_spiral_length")
export("spiral_arrow")
export("spiral_axis")
export("spiral_bars")
export("spiral_clear")
export("spiral_dendrogram")
export("spiral_git_commits")
export("spiral_highlight")
export("spiral_highlight_by_sector")
export("spiral_horizon")
export("spiral_info")
export("spiral_initialize")
export("spiral_initialize_by_gcoor")
export("spiral_initialize_by_time")
export("spiral_lines")
export("spiral_opt")
export("spiral_phylo")
export("spiral_points")
export("spiral_polygon")
export("spiral_raster")
export("spiral_rect")
export("spiral_segments")
export("spiral_text")
export("spiral_track")
export("spiral_xaxis")
export("spiral_yaxis")
export("xy_to_cartesian")
export("xy_to_polar")

import("GlobalOptions")
import(GetoptLong)
import(grid)
import(lubridate)
import(methods)
importFrom("circlize", colorRamp2, rand_color)
importFrom("grDevices", "as.raster", "png", "dev.off")
importFrom("grDevices", "col2rgb", "rgb", "dev.size", "pdf.options")
importFrom("utils", "getFromNamespace", "packageDescription")
importFrom("utils", "read.table")
importFrom(stats, is.leaf, uniroot)

